#!/bin/bash

echo "üöÄ Testing Rust WebRTC Server Components"
echo "========================================"

# Test 1: HTTP Server
echo
echo "üîç Testing HTTP Server..."
if curl -s "http://localhost:8086/" | grep -q "Flutter WebRTC"; then
    echo "‚úÖ HTTP server working - static files served"
    HTTP_TEST=1
else
    echo "‚ùå HTTP server failed"
    HTTP_TEST=0
fi

# Test 2: TURN Credentials API
echo
echo "üîç Testing TURN Credentials API..."
TURN_RESPONSE=$(curl -s "http://localhost:8086/api/turn?service=turn&username=test_client")
if echo "$TURN_RESPONSE" | grep -q "username.*password.*ttl.*uris"; then
    echo "‚úÖ TURN credentials API working"
    echo "   Response: $TURN_RESPONSE"
    TURN_API_TEST=1
else
    echo "‚ùå TURN credentials API failed"
    echo "   Response: $TURN_RESPONSE"
    TURN_API_TEST=0
fi

# Test 3: TURN Server Port Binding
echo
echo "üîç Testing TURN Server Port Binding..."
if netstat -an | grep -q "\.19302.*udp"; then
    echo "‚úÖ TURN server port 19302 is bound"
    TURN_PORT_TEST=1
else
    echo "‚ùå TURN server port 19302 not bound"
    TURN_PORT_TEST=0
fi

# Test 4: WebSocket Endpoint
echo
echo "üîç Testing WebSocket Endpoint..."
WS_RESPONSE=$(curl -s -I "http://localhost:8086/ws")
if echo "$WS_RESPONSE" | grep -q "HTTP/1.1"; then
    echo "‚úÖ WebSocket endpoint accessible"
    WS_TEST=1
else
    echo "‚ùå WebSocket endpoint failed"
    WS_TEST=0
fi

# Test 5: TURN Server STUN Response (using our Python script)
echo
echo "üîç Testing TURN Server STUN Response..."
if python3 test_turn.py | grep -q "STUN Binding Success Response received"; then
    echo "‚úÖ TURN server STUN protocol working"
    STUN_TEST=1
else
    echo "‚ùå TURN server STUN protocol failed"
    STUN_TEST=0
fi

# Summary
echo
echo "=================================================="
echo "üìä TEST RESULTS SUMMARY"
echo "=================================================="

TOTAL_TESTS=5
PASSED_TESTS=$((HTTP_TEST + TURN_API_TEST + TURN_PORT_TEST + WS_TEST + STUN_TEST))

echo "HTTP Server                ‚úÖ $([ $HTTP_TEST -eq 1 ] && echo "PASS" || echo "FAIL")"
echo "TURN Credentials API       ‚úÖ $([ $TURN_API_TEST -eq 1 ] && echo "PASS" || echo "FAIL")"  
echo "TURN Server Port Binding   ‚úÖ $([ $TURN_PORT_TEST -eq 1 ] && echo "PASS" || echo "FAIL")"
echo "WebSocket Endpoint         ‚úÖ $([ $WS_TEST -eq 1 ] && echo "PASS" || echo "FAIL")"
echo "TURN Server STUN Protocol  ‚úÖ $([ $STUN_TEST -eq 1 ] && echo "PASS" || echo "FAIL")"

echo "--------------------------------------------------"
echo "TOTAL: $PASSED_TESTS/$TOTAL_TESTS tests passed"

if [ $PASSED_TESTS -eq $TOTAL_TESTS ]; then
    echo
    echo "üéâ ALL TESTS PASSED! The Rust WebRTC server is fully functional!"
    echo
    echo "üìã Working Components:"
    echo "   ‚Ä¢ HTTP Server (port 8086)"
    echo "   ‚Ä¢ Static file serving"
    echo "   ‚Ä¢ TURN credentials REST API (/api/turn)"
    echo "   ‚Ä¢ TURN server (port 19302)"
    echo "   ‚Ä¢ STUN binding protocol"
    echo "   ‚Ä¢ WebSocket signaling endpoint"
    echo "   ‚Ä¢ HMAC-SHA1 credential generation"
    echo
    echo "üîó Access the server at: http://localhost:8086/"
    echo "üîó WebSocket endpoint: ws://localhost:8086/ws"
    echo "üîó TURN credentials: http://localhost:8086/api/turn?service=turn&username=YOUR_USER"
else
    echo
    echo "‚ö†Ô∏è  $(($TOTAL_TESTS - $PASSED_TESTS)) tests failed. Check the details above."
fi